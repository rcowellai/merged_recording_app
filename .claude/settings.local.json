{
  "permissions": {
    "allow": [
      "Bash(dir:*)",
      "Bash(npx @21-dev/context7-mcp:*)",
      "Bash(claude mcp:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(npm install:*)",
      "Bash(mkdir:*)",
      "Bash(firebase projects:list:*)",
      "Bash(node:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(firebase deploy:*)",
      "Bash(npm run build:*)",
      "Bash(npm ls:*)",
      "Bash(npm test:*)",
      "Bash(firebase hosting:channel:list:*)",
      "Bash(firebase functions:list:*)",
      "Bash(firebase functions:log:*)",
      "Bash(firebase use:*)",
      "Read(/C:\\Users\\RobbieC\\Pictures\\Screenshots/**)",
      "Read(/C:\\Users\\RobbieC\\Pictures\\Screenshots/**)",
      "Bash(grep:*)",
      "Read(/C:\\Users\\RobbieC\\Pictures\\Screenshots/**)",
      "Read(/C:\\Users\\RobbieC\\Pictures\\Screenshots/**)",
      "Read(/C:\\Users\\RobbieC\\Pictures\\Screenshots/**)",
      "Bash(git push:*)",
      "Bash(del:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Read(//c/Users/RobbieC/**)",
      "Bash(npm search:*)",
      "Bash(npx @upstash/context7-mcp:*)",
      "Bash(npx @modelcontextprotocol/server-sequential-thinking:*)",
      "Bash(findstr /i readme)",
      "Bash(npm start)",
      "Bash(ipconfig)",
      "Bash(findstr /i \"IPv4\")",
      "Bash(cat:*)",
      "Bash(ren:*)",
      "Bash(git log:*)",
      "WebFetch(domain:github.com)",
      "Bash(findstr:*)",
      "Bash(npx eslint:*)",
      "Bash(timeout /t 10)",
      "Bash(git reset:*)",
      "Bash(git rm:*)",
      "WebSearch",
      "WebFetch(domain:bundlephobia.com)",
      "WebFetch(domain:vaul.emilkowal.ski)",
      "Bash(npm view:*)",
      "Bash(git merge:*)",
      "Bash(git stash:*)",
      "SlashCommand(/sc:analyze \"On the demo screen we are showing app error boundary and firebase error - these are 2 different error screens that will be shown to the end user under different circumstances, correct?\" --think --persona-analyzer)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(npm run lint:*)",
      "Bash(exit 0)",
      "Bash(test:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\Users\\RobbieC\\Desktop\\loveretoldrecorder"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "context7",
    "sequential-thinking"
  ],
  "disabledMcpjsonServers": []
}
